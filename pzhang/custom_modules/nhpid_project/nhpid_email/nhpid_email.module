<?php
/**
 * @file
 * Example of how to use Drupal's mail API.
 */

/**
 * @defgroup nhpid_email Example: Email
 * @ingroup examples
 * @{
 * Example of how to use Drupal's mail API.
 *
 * This example module provides two different examples of the Drupal email API:
 *  - Defines a simple contact form and shows how to use drupal_mail()
 *    to send an e-mail (defined in hook_mail()) when the form is submitted.
 *  - Shows how modules can alter emails defined by other Drupal modules or
 *    Core using hook_mail_alter by attaching a custom signature before
 *    they are sent.
 */

/**
 * Implement hook_mail().
 *
 * This hook defines a list of possible e-mail templates that this module can
 * send. Each e-mail is given a unique identifier, or 'key'.
 *
 * $message comes in with some standard properties already set: 'to' address,
 * 'from' address, and a set of default 'headers' from drupal_mail(). The goal
 * of hook_mail() is to set the message's 'subject' and 'body' properties, as
 * well as make any adjustments to the headers that are necessary.
 *
 * The $params argument is an array which can hold any additional data required
 * to build the mail subject and body; for example, user-entered form data, or
 * some context information as to where the mail request came from.
 *
 * Note that hook_mail() is not actually a hook. It is only called for a single
 * module, the module named in the first argument of drupal_mail(). So it's
 * a callback of a type, but not a hook.
 */
function nhpid_email_mail($key, &$message, $params) {
  global $user;

  // Each message is associated with a language, which may or may not be the
  // current user's selected language, depending on the type of e-mail being
  // sent. This $options array is used later in the t() calls for subject
  // and body to ensure the proper translation takes effect.
  $options = array(
    'langcode' => $message['language']->language,
  );

  switch ($key) {
    // Send a simple message from the contact form.
    case 'nhpid_email':
      
      $message['subject'] = $params['subject'];
      $message['body'][] = check_plain($params['message']);
      break;
  }
}

/**
 * Sends an e-mail.
 *
 * @param $form_values
 *   An array of values from the contact form fields that were submitted.
 *   There are just two relevant items: $form_values['email'] and
 *   $form_values['message'].
 */
function nhpid_email_mail_send($form_values) {
  // All system mails need to specify the module and template key (mirrored from
  // hook_mail()) that the message they want to send comes from.
  global $user;
  $module = 'nhpid_email';
  $key = 'nhpid_email';

  // Specify 'to' and 'from' addresses.
  $users = $form_values['users'];
  $tos = array();
  foreach ($users as $email => $name){
    if ($name){
      $tos[] = $email;
    }
  }
  if ($form_values['send_me_copy']) $tos[] = $user->mail;
  $to = implode(',', $tos);
  $from = $user -> mail;

  // "params" loads in additional context for email content completion in
  // hook_mail(). In this case, we want to pass in the values the user entered
  // into the form, which include the message body in $form_values['message'].
  $params = $form_values;

  // The language of the e-mail. This will one of three values:
  // * user_preferred_language(): Used for sending mail to a particular website
  //   user, so that the mail appears in their preferred language.
  // * global $language: Used when sending a mail back to the user currently
  //   viewing the site. This will send it in the language they're currently
  //   using.
  // * language_default(): Used when sending mail to a pre-existing, 'neutral'
  //   address, such as the system e-mail address, or when you're unsure of the
  //   language preferences of the intended recipient.
  //
  // Since in our case, we are sending a message to a random e-mail address that
  // is not necessarily tied to a user account, we will use the site's default
  // language.
  $language = language_default();

  // Whether or not to automatically send the mail when drupal_mail() is
  // called. This defaults to TRUE, and is normally what you want unless you
  // need to do additional processing before drupal_mail_send() is called.
  $send = TRUE;
  // Send the mail, and check for success. Note that this does not guarantee
  // message delivery; only that there were no PHP-related issues encountered
  // while sending.
  $result = drupal_mail($module, $key, $to, $language, $params, $from, $send);
  if ($result['result'] == TRUE) {
    drupal_set_message(t('Your message has been sent.'));
  }
  else {
    drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
  }

}

/**
 * Implement hook_mail_alter().
 *
 * This function is not required to send an email using Drupal's mail system.
 *
 * Hook_mail_alter() provides an interface to alter any aspect of email sent by
 * Drupal. You can use this hook to add a common site footer to all outgoing
 * email, add extra header fields, and/or modify the email in anyway. HTML-izing
 * the outgoing email is one possibility.
 */
function nhpid_email_mail_alter____(&$message) {
  // For the purpose of this example, modify all the outgoing messages and
  // attach a site signature. The signature will be translated to the language
  // in which message was built.
  $options = array(
    'langcode' => $message['language']->language,
  );

  $signature = t("\n--\nMail altered by nhpid_email module.", array(), $options);
  if (is_array($message['body'])) {
    $message['body'][] = $signature;
  }
  else {  // Some modules use the body as a string, erroneously.
    $message['body'] .= $signature;
  }
}

///// Supporting functions ////
function nhpid_email_permission() {
    return array(
    'access nhpid email' => array(
      'title' => t('Access NHPID Email'),
      'description' => t(''),
      ),
    );
}

/**
 * Implement hook_menu().
 *
 * Set up a page with an e-mail contact form on it.
 */
function nhpid_email_menu() {
  $items['nhpid_email'] = array(
    'title' => 'Send Email',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nhpid_email_form',1),
    'access arguments' => array('access nhpid email'),
    'description' => 'Send email to other users',
    'menu_name' => 'navigation',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * The contact form.
 */
function nhpid_email_form($form, &$form_state=NULL, $user_to_send_uids=null) {
  global $user;
  //drupal_set_title("Send an email to other users");
  $form['intro'] = array(
    '#type' => 'item',
    '#description' =>  t('Use this form to send a message to other users. No spamming!'),
  );
	$form['filters'] = array(
    '#type' => 'fieldset',
    '#title' => 'Filters',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
	);
  $status_default = isset($form_state['values']['status']) ? $form_state['values']['status'] : 1;
  $form['filters']['status'] = array(
    '#type' => 'radios',
		'#title' => t('Status'),
		'#default_value' => $status_default,
		'#options' => array(1=>'Active', 0=>'Blocked'),
	);
  $sql = "select role.* from {role}, {users_roles} ur where ur.rid=role.rid";
	$result = db_query($sql);
	$roles = array();
	while ($role = $result->fetchObject()){
		$roles[$role->rid]=$role->name;
	}
  $roles_default = !empty($form_state['values']['roles']) ? $form_state['values']['roles'] : array_keys($roles);

  $form['filters']['roles'] = array(
    '#type' => 'checkboxes',
		'#title' => t('Roles'),
		'#default_value' => $roles_default,
		'#options' => $roles,
		'#multiple'=> TRUE,
	);
  $form['filters']['refresh'] = array(
    '#type' => 'submit',
		'#value' => t('Refresh'),
    //'#validate' => array('nhpid_email_filter_validate'),
    '#limit_validation_errors' => array(array('status'), array('roles')),
		'#submit' => array('nhpid_email_form_submit'),
	);
  //drupal_set_message(nhpid_api_dump($form_state['values'], 'red', TRUE));
  //drupal_set_message(nhpid_api_dump($roles_default, 'red', TRUE));
  //drupal_set_message(nhpid_api_dump($status_default, 'red', TRUE));
  $sql = "select * from {users} where status = :status and uid in (select uid from {users_roles} where rid in (:roles))";
  $users = array();
  $result = db_query($sql, array(':status'=>$status_default, ':roles'=>$roles_default));
  while ($rc = $result->fetchObject()){
    if ($rc -> uid != $user -> uid) $users[$rc->mail] = array('userid'=>$rc -> name, 'mail'=>$rc->mail, 'status'=>$rc->status==1? 'Active' : 'Blocked');
  }
  //drupal_set_message(nhpid_api_dump($user_to_send_uids, 'red', TRUE));
  $users_to_send = array();
  if ($user_to_send_uids){
    $users_to_send_uids_array = explode(',', $user_to_send_uids);
    foreach ($users_to_send_uids_array as $uid){
     if ($user_to_send = user_load($uid)) $users_to_send[$user_to_send->mail] = $user_to_send->mail;
    }
  }
  $selected_users = !empty($form_state['values']['users']) ? $form_state['values']['users'] : $users_to_send;
  //drupal_set_message(nhpid_api_dump($selected_users, 'red', TRUE));
  $form['to'] = array(
    '#type' => 'fieldset',
    '#title' => 'Email recipents',
    '#collapsible' => TRUE, 
    '#collapsed' => $user_to_send_uids,
  );
  $header=array('userid'=>'User ID', 'mail'=>"Workflow State", 'status' => 'Status');
  $form['to']['users'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#js_select' => TRUE,
    '#title' => t('Select users'), 
    '#options' => $users,
    '#default_value' => $selected_users,
    '#checkall' => TRUE,
    '#required' => TRUE,
    '#description' => t('Select one or more users'),
  );
  $subject = !empty($form_state['values']['subject']) ? $form_state['values']['subject'] : null;
  $form['subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#default_value' => $subject,
    '#required' => TRUE,
  );
  $message = !empty($form_state['values']['message']) ? $form_state['values']['message'] : null;
  $form['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Message'),
    '#required' => TRUE,
    '#default_value' => $message,
  );
  $send_me_copy = !empty($form_state['values']['send_me_copy']) ? $form_state['values']['send_me_copy'] : null;
  $form['send_me_copy'] = array(
    '#type' => 'checkbox', 
    '#title' => t('Send me a copy'), 
    '#default_value' => $send_me_copy,
    '#required' => false,
    '#default_value' => true,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Form validation logic for the contact form.
 */
 function nhpid_email_filter_validate($form, &$form_state) {
    //drupal_set_message(nhpid_api_dump($form_state, 'red', TRUE));
 }
function nhpid_email_form_validate($form, &$form_state) {
	if ($form_state['clicked_button']['#id'] == 'edit-submit'){
		$users = $form_state['values']['users'];
	  $selected_users = 0;
	  foreach ($users as $email => $name){
	    if ($name){
	      $selected_users ++;
	    }
	  }
	  if (!$selected_users) {
	    form_set_error('users', t('No users have been selected.'));
	  }
	}
}

/**
 * Form submission logic for the contact form.
 */
function nhpid_email_form_submit($form, &$form_state) {
  //drupal_set_message(nhpid_api_dump($form_state, 'blue', TRUE));
  $form_state['storage']['values'] = $form_state['values'];
  if ($form_state['clicked_button']['#id'] == 'edit-submit'){
    nhpid_email_mail_send($form_state['values']);
	}
	else {
		$form_state['rebuild']=TRUE;
	}
  $form_state['rebuild']=TRUE;
}
/**
 * @} End of "defgroup nhpid_email".
 */
